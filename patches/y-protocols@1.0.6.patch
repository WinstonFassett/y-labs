diff --git a/awareness.js b/awareness.js
index 8f9ae9448d19ce46a6cd76f8cdb8e2a0944f7bf5..ee54c00f851918c87c1606083dec11b37aea2770 100644
--- a/awareness.js
+++ b/awareness.js
@@ -10,7 +10,7 @@ import { Observable } from 'lib0/observable'
 import * as f from 'lib0/function'
 import * as Y from 'yjs' // eslint-disable-line
 
-export const outdatedTimeout = 30000
+export const outdatedTimeout = 70000
 
 /**
  * @typedef {Object} MetaClientState
@@ -116,6 +116,7 @@ export class Awareness extends Observable {
     const updated = []
     const filteredUpdated = []
     const removed = []
+    const resurrected = []
     if (state === null) {
       removed.push(clientID)
     } else if (prevState == null) {
@@ -245,6 +246,7 @@ export const applyAwarenessUpdate = (awareness, update, origin) => {
   const updated = []
   const filteredUpdated = []
   const removed = []
+  const resurrected = []
   const len = decoding.readVarUint(decoder)
   for (let i = 0; i < len; i++) {
     const clientID = decoding.readVarUint(decoder)
@@ -275,7 +277,10 @@ export const applyAwarenessUpdate = (awareness, update, origin) => {
       } else if (clientMeta !== undefined && state === null) {
         removed.push(clientID)
       } else if (state !== null) {
-        if (!f.equalityDeep(state, prevState)) {
+        if (clientMeta !== undefined && prevState === undefined) {
+          resurrected.push(clientID)
+        }
+        if (!f.equalityDeep(state, prevState)) {        
           filteredUpdated.push(clientID)
         }
         updated.push(clientID)
@@ -284,12 +289,12 @@ export const applyAwarenessUpdate = (awareness, update, origin) => {
   }
   if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {
     awareness.emit('change', [{
-      added, updated: filteredUpdated, removed
+      added, updated: filteredUpdated, removed, resurrected
     }, origin])
   }
   if (added.length > 0 || updated.length > 0 || removed.length > 0) {
     awareness.emit('update', [{
-      added, updated, removed
+      added, updated, removed, resurrected
     }, origin])
   }
 }
diff --git a/dist/awareness.cjs b/dist/awareness.cjs
index 884c8d9efd8a9085ed98f60a6c2db830dd2becdd..49f410ce1a3dbf4bf09ed03fac29b5e6c7b05e1d 100644
--- a/dist/awareness.cjs
+++ b/dist/awareness.cjs
@@ -36,7 +36,7 @@ var f__namespace = /*#__PURE__*/_interopNamespaceDefault(f);
  */
 
 
-const outdatedTimeout = 30000;
+const outdatedTimeout = 70000;
 
 /**
  * @typedef {Object} MetaClientState
@@ -142,6 +142,7 @@ class Awareness extends observable.Observable {
     const updated = [];
     const filteredUpdated = [];
     const removed = [];
+    const resurrected = [];
     if (state === null) {
       removed.push(clientID);
     } else if (prevState == null) {
@@ -301,6 +302,9 @@ const applyAwarenessUpdate = (awareness, update, origin) => {
       } else if (clientMeta !== undefined && state === null) {
         removed.push(clientID);
       } else if (state !== null) {
+        if (clientMeta !== undefined && prevState === undefined) {
+          resurrected.push(clientID)
+        }
         if (!f__namespace.equalityDeep(state, prevState)) {
           filteredUpdated.push(clientID);
         }
@@ -310,12 +314,12 @@ const applyAwarenessUpdate = (awareness, update, origin) => {
   }
   if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {
     awareness.emit('change', [{
-      added, updated: filteredUpdated, removed
+      added, updated: filteredUpdated, removed, resurrected
     }, origin]);
   }
   if (added.length > 0 || updated.length > 0 || removed.length > 0) {
     awareness.emit('update', [{
-      added, updated, removed
+      added, updated, removed, resurrected
     }, origin]);
   }
 };
